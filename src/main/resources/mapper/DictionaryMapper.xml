<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fool.demo.mapper.DictionaryMapper">

    <resultMap id="BaseResultMap" type="com.fool.demo.domain.Dictionary">
        <id property="type" column="TYPE" jdbcType="INTEGER"/>
        <id property="code" column="CODE" jdbcType="INTEGER"/>
        <result property="label" column="LABEL" jdbcType="VARCHAR"/>
        <result property="value" column="VALUE" jdbcType="VARCHAR"/>
        <result property="createTime" column="CREATE_TIME" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="Base_Column_List">
        TYPE,CODE,LABEL,
        VALUE,CREATE_TIME
    </sql>
    <delete id="deleteByPrimaryKey">
        delete
        from dictionary
        where TYPE = #{type,jdbcType=INTEGER}
          AND CODE = #{code,jdbcType=INTEGER}
    </delete>

    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from dictionary
        where TYPE = #{type,jdbcType=INTEGER} AND CODE = #{code,jdbcType=INTEGER}
    </select>
    <select id="selectByType" resultType="com.fool.demo.domain.Dictionary">
        select *
        from dictionary
        where TYPE = #{type,jdbcType=BIGINT}
    </select>
    <select id="select" resultType="com.fool.demo.domain.Dictionary">
        select *
        from dictionary
        where TYPE = #{dictType,jdbcType=BIGINT}
    </select>

    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.fool.demo.domain.Dictionary"
            useGeneratedKeys="true">
        insert into dictionary
        ( TYPE, CODE, LABEL
        , VALUE, CREATE_TIME)
        values ( #{type,jdbcType=INTEGER}, #{code,jdbcType=INTEGER}, #{label,jdbcType=VARCHAR}
               , #{value,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}) )
    </insert>
    <insert id="insertSelective" parameterType="com.fool.demo.domain.Dictionary">
        insert into dictionary
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="type != null">type,</if>
            <if test="code != null">code,</if>
            <if test="label != null">label,</if>
            <if test="value != null">value,</if>
            <if test="createTime != null">createTime,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="type != null">#{type,jdbcType=INTEGER},</if>
            <if test="code != null">#{code,jdbcType=INTEGER},</if>
            <if test="label != null">#{label,jdbcType=VARCHAR},</if>
            <if test="value != null">#{value,jdbcType=VARCHAR},</if>
            <if test="createTime != null">#{createTime,jdbcType=TIMESTAMP},</if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.fool.demo.domain.Dictionary">
        update dictionary
        <set>
            <if test="label != null">
                LABEL = #{label,jdbcType=VARCHAR},
            </if>
            <if test="value != null">
                VALUE = #{value,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where TYPE = #{type,jdbcType=INTEGER} AND CODE = #{code,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.fool.demo.domain.Dictionary">
        update dictionary
        set LABEL       = #{label,jdbcType=VARCHAR},
            VALUE       = #{value,jdbcType=VARCHAR},
            CREATE_TIME = #{createTime,jdbcType=TIMESTAMP}
        where TYPE = #{type,jdbcType=INTEGER} CODE = #{code,jdbcType=INTEGER}
    </update>
</mapper>
